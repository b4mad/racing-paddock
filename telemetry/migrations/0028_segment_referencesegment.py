# Generated by Django 5.1b1 on 2024-07-09 19:03

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("telemetry", "0027_lap_completed"),
    ]

    operations = [
        migrations.CreateModel(
            name="Segment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("kind", models.CharField(max_length=200, null=True)),
                ("braking_point", models.PositiveIntegerField(null=True)),
                ("lift_off_point", models.PositiveIntegerField(null=True)),
                ("acceleration_point", models.PositiveIntegerField(null=True)),
                ("brake_pressure", models.PositiveSmallIntegerField(null=True)),
                ("brake_application_rate", models.PositiveSmallIntegerField(null=True)),
                ("brake_release_rate", models.PositiveSmallIntegerField(null=True)),
                ("throttle_lift", models.PositiveSmallIntegerField(null=True)),
                ("throttle_application_rate", models.PositiveSmallIntegerField(null=True)),
                ("throttle_release_rate", models.PositiveSmallIntegerField(null=True)),
                ("apex", models.PositiveIntegerField(null=True)),
                ("entry_speed", models.PositiveSmallIntegerField(null=True)),
                ("corner_speed", models.PositiveSmallIntegerField(null=True)),
                ("exit_speed", models.PositiveSmallIntegerField(null=True)),
                ("gear", models.PositiveSmallIntegerField(null=True)),
                ("coasting_time", models.PositiveIntegerField(null=True)),
                (
                    "landmark",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="segments", to="telemetry.landmark"
                    ),
                ),
                (
                    "lap",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="segments", to="telemetry.lap"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReferenceSegment",
            fields=[
                (
                    "segment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="telemetry.segment",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="reference_segments", to="telemetry.driver"
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="reference_segments", to="telemetry.track"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("telemetry.segment",),
        ),
    ]
